services:
  frontend:
    image: ghcr.io/r-sandor/findfirst-frontend:latest
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_IMAGE_DIR=/public/screenshots/
    volumes:
      - ./data/screenshots:/app/public/screenshots
  server:
    image: ghcr.io/r-sandor/findfirst-server:latest
    ports:
      - "9000:9000"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/findfirst
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_MAIL_HOST=mail
      - SCREENSHOT_SERVICE_URL=${SCREENSHOT_SERVICE_URL}
      - FINDFIRST_SCREENSHOT_LOCATION=/app/screenshots
      - FINDFIRST_UPLOAD_LOCATION=/app/profile-pictures/
      - FINDFIRST_TYPESENSE_API_KEY=${TYPESENSE_API_KEY}
      - FINDFIRST_TYPESENSE_HOST=${TYPESENSE_SERVICE_HOST}
    volumes:
      - ./data/screenshots:/app/screenshots
      - ./data/uploads/profile-pictures:/app/profile-pictures
    depends_on:
      - db
      - typesense
  screenshot:
    image: ghcr.io/r-sandor/findfirst-screenshot:latest
    ports:
      - 8080:8080
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - FINDFIRST_SCREENSHOT_LOCATION=/app/screenshots
    volumes:
      - ./data/screenshots:/app/screenshots
  typesense:
    image: typesense/typesense:27.1
    restart: on-failure
    ports:
      - 8108:8108
    environment:
      - TYPESENSE_API_KEY=${TYPESENSE_API_KEY}
    volumes:
      - ./data/typesense-data:/data
    command: "--data-dir /data --enable-cors"
  db:
    image: postgres:16.2-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - 5432:5432
    restart: always
  mail:
    image: mailhog/mailhog:latest
    ports:
      - 1025:1025
      - 8025:8025
volumes:
  pgdata:
