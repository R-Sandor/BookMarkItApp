plugins {
	id 'org.springframework.boot' version '3.0.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id "com.diffplug.spotless" version "6.11.0"
	id 'java'
}

group = 'dev.renegade'
version = '1.0.0'
sourceCompatibility = '17'
compileJava.dependsOn 'spotlessApply'

spotless {
	// optional: limit format enforcement to just the files changed by this feature branch
	ratchetFrom 'origin/main'

	format 'misc', {
		// define the files to apply `misc` to
		target '*.gradle', '*.md', '.gitignore'
		// define the steps to apply to those files
		trimTrailingWhitespace()
		indentWithTabs() // or spaces. Takes an integer argument if you don't like 4
		endWithNewline()
	}
	java {
		// optional: you can specify import groups directly
		// note: you can use an empty string for all the imports you didn't specify explicitly, and '\\#` prefix for static imports
		importOrder('java', 'jakarta', 'com.acme', '', '\\#com.acme', '\\#')
		// optional: instead of specifying import groups directly you can specify a config file
		// export config file: https://github.com/diffplug/spotless/blob/main/ECLIPSE_SCREENSHOTS.md#creating-spotlessimportorder

		removeUnusedImports()

		// Choose one of these formatters.
		googleJavaFormat()   // has its own section below

		formatAnnotations()  // fixes formatting of type annotations, see below

		//licenseHeader '/* (C) $YEAR */' // or licenseHeaderFile
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-security:3.0.1'
	implementation 'org.springframework.security:spring-security-config:6.0.1'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-mail:3.0.1'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'

	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test:6.0.1'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	testImplementation 'io.projectreactor:reactor-test'
}

test {
	useJUnitPlatform()
}
